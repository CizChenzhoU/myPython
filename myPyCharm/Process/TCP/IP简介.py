# 自从互联网诞生以来，现在基本上所有的程序都是网络程序，很少有单机版的程序了。
# 计算机网络就是把各个计算机连接到一起，让网络中的计算机可以互相通信。网络编程就是如何在程序中实现两台计算机通信
# 举个例子，当你使用浏览器访问新浪网是，你的计算机就和新浪的某台服务器通过互联网连接起来了，然后，新浪的服务器把网页
# 内容作为数据通过互联网传输到你的电脑上。

# 由于你的电脑上可能不止浏览器，还有QQ、Skype、Dropbox、邮件客户端等，不同的程序连接的别的计算机也会不同，所以，更
# 确切地说，网络通信是两台计算机上的进程之间的通信。比如，浏览器进程和新浪服务器上的某个web服务进程在通信，而QQ进程
# 是和腾讯的某个服务器的某个进程在通信。

# 网络编程对所有开发语言都是一样的，Python也不例外。用Python进行网络编程，就是在Python程序本身这个进程内，连接别的
# 服务器进程的通信端口进行通信。

# TCP/IP简介
# 虽然大家现在对互联网很熟悉，但是计算机网络的出现比互联网要早很多。
# 计算机为了联网，就必须规则通信协议，早期的计算机网络，都是由各厂商自己规定一套协议，IBM、Apple和Microsoft都有各自
# 的网络协议，互不兼容，这就好比一群人有的说英语，有的说汉语，有的说德语，说同一种语言的人可以交流，不同语言之间就
# 不行了。

# 为了把全世界的所有不同类型的计算机都连接起来，就必须规定一套全球通用的协议，为了实现互联网这个目标，互联网协议簇
# （Internet Protocol Suite）就是通用协议标准。Internet是由inter和net两个单词组合起来的，原意就是连接“网络”的网络
# 有了Internet,任何私有网络，只要支持这个协议，就可以联入互联网。

# 因为互联网协议包含了上百种协议标准，但是最重要的两个协议是TCP和IP协议，所以，大家把互联网的协议简称TCP/IP协议

# 通信的时候，双方必须知道对方的标识，好比发邮件必须知道对方的邮件地址。互联网上每个计算机的唯一标识就是IP地址，类似
# 123.123.123.123。如果一台计算机同事接入到两个或更多的网络，比如路由器，它就会有两个或者多个IP地址。所以，IP地址对应
# 的实际上是计算机的网络接口，通常是网卡。

# IP协议负责把数据从一台计算机通过网络发生到另一个计算机。数据被分割成一小块一小块，然后通过IP包发送出去。由于互联网
# 链路复杂，两台计算机之间经常有多条线路，因此，路由器就负责决定如何把一个IP包转发出去。IP包的特点是按块发送，途径
# 多个路由，但不保证能到达，也不保证顺序到达。


# IP地址时间上是一个32位整数（称为IPv4）,以字符串表示的IP地址如192.168.0.1实际上是把32位整数按8位分组后的数字表示
# 目的是便于阅读

# IPv6地址实际上是一个128位整数，它是目前使用的IPv4的升级版，以字符串表示类似于2001:0db8:85a3:0042:1000:8a2e:0370:7334

# TCP协议则是建立在IP协议之上的。TCP协议负责在两台计算机之间建立可靠连接，保证数据包按顺序到达。TCP协议会通过握手建立
# 连接，然后，对每个IP包进行编号，确保对方按顺序收到，如果包丢掉了，就自动重发。

# 许多常用的更高级的协议都是建立在TCP协议的基础上的，比如用于浏览器的HTTP协议、发送邮件的SMTP协议等。

# 一个IP包除了包含要传输的数据外，还包含源IP地址和目标IP地址，源端口和目标端口。

# 端口有什么作用?在两台计算机通信时，只发IP地址是不够的，因为同一台计算机上跑着多个网络程序。一个IP包来了之后，到底
# 是交给浏览器还是QQ，就需要端口号来区分。每个网络程序都向操作系统申请唯一端口号，这样，两个进程在两台计算机之间
# 建立网络连接就需要各自的IP地址和各自的端口号了

# 一个进程也可能同时与多个计算机建立链接，因此它会申请很多端口。
# 了解了TCP/IP协议的基本概念，IP地址和端口的概念，我们就可以开始进行网络编程了。













